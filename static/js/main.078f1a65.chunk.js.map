{"version":3,"sources":["components/card.js","components/cardlist.js","components/searchbox.js","components/scroll.js","containers/app.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","event","Scroll","style","overflowY","border","height","children","App","onSearchChange","setState","searchfield","target","value","render","filteredRobots","state","filter","toLowerCase","includes","length","fetch","then","response","json","users","Component","ReactDOM","document","getElementById"],"mappings":"wOAceA,EAZF,SAACC,GACZ,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACE,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCcHC,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZ,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdC,KAAOG,EAAOG,GAAGN,KACjBC,MAAOE,EAAOG,GAAGL,OAHZK,SCKdC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKZ,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAWJ,EAAaI,SCO3BC,G,MAdA,SAAClB,GACd,OACE,qBACEmB,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGtB,EAAMuB,aCqCEC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACR,GAChB,EAAKS,SAAS,CAAEC,YAAaV,EAAMW,OAAOC,SAf9B,EAkBdC,OAAS,WACP,IAAMC,EAAiB,EAAKC,MAAMxB,OAAOyB,QAAO,SAACzB,GAC/C,OAAOA,EAAOH,KACX6B,cACAC,SAAS,EAAKH,MAAML,YAAYO,kBAErC,OAAiC,IAA7B,EAAKF,MAAMxB,OAAO4B,OACb,oBAAInC,UAAU,QAAd,qBAGL,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAc,EAAKY,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQuB,UA9B1B,EAAKC,MAAQ,CACXxB,OAAQ,GACRmB,YAAa,IAJH,E,gEAQO,IAAD,OAClBU,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKf,SAAS,CAAElB,OAAQiC,W,GAZ7BC,aCAlBC,IAASb,OAAO,cAAC,EAAD,IAASc,SAASC,eAAe,W","file":"static/js/main.078f1a65.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br2 pa2 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${props.id}?150x150`} />\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({ robots }) => {\r\n        return (\r\n            <div>\r\n                {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name ={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                  })\r\n                }\r\n             </div>\r\n    );\r\n}   \r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={(event) => searchChange(event)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"5px solid black\",\r\n        height: \"500px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/cardlist\";\r\nimport robots from \"../robots.js\";\r\nimport SearchBox from \"../components/searchbox\";\r\nimport \"./app.css\";\r\nimport Scroll from \"../components/scroll\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    const filteredRobots = this.state.robots.filter((robots) => {\r\n      return robots.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return <h1 className=\"f1 tc\">Loading</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">Robofriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"tachyons\";\nimport App from \"./containers/app.js\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}